XOR RAX, RAX;
PUSH RAX;
MOV RDI, RAX;
MOV RSI, RSP;
LEA RDX, [RAX + 2];
SYSCALL;

POP RCX;
SUB RCX, '00';
MOVZX RDX, CX;
SHR RDX, 8;
CMP RCX, RDI;
MOVZX RCX, CL;

JLE @sdgt;
  LEA RCX, [RCX + RCX*4];
  LEA RCX, [RDX + RCX*2];
@sdgt:

LEA RAX, [RDI + 1];
LEA RSI, [RDI - 1];
MOV RBP, RDI;
MOV RBX, RDI;
SHL RAX, CL;

PUSH RDI;
PUSH RDI;
PUSH RDI;
PUSH RDI;

DEC RAX;
MOV RDI, RSI;
MOV RCX, RAX;
JMP @fall;

ALIGN 4;
@rise:
  LEA RDX, [RCX - 1];
  NOT RCX;
  XOR RDX, RCX;
  OR RCX, RDX;

  PUSH RDI;  <--  R
  PUSH RSI;  <--  L
  PUSH RAX;  <--  V
  PUSH RDX;  <--  N

  AND RAX, RCX;
  AND RSI, RCX;
  AND RDI, RCX;

  ROL RSI, 1;
  SAR RDI, 1;
  MOV RCX, RAX;

ALIGN 4;
@fall:
  AND RCX, RSI;
  AND RCX, RDI;
JNE @rise;

  CMP RAX, 1;
  ADC RBP, 0;

  POP RCX;   <--  N
  POP RAX;   <--  V
  POP RSI;   <--  L
  POP RDI;   <--  R

  ADC RBX, 0;
  AND RCX, RAX;
  TEST RDI, RDI;
JNE @fall;

MOV RAX, RBP;
MOV RDX, RBX;
MOV RCX, 10000000000000000000;
DIV RCX;
MOV RBX, RAX;
MOV RAX, RDX;
LEA RCX, [RDI + 10];
PUSH RCX;

@itoa:
  XOR RDX, RDX;
  DIV RCX;
  ADD RDX, '0';
  PUSH RDX;
  TEST RAX, RAX;
JNE @itoa;

  MOV RAX, RBX;
  TEST RBX, RBX;
  MOV RBX, RDI;
JNE @itoa;

INC RDI;
MOV RDX, RDI;

@outp:
  MOV RSI, RSP;
  MOV RAX, RDI;
  SYSCALL;
  POP RAX;
  CMP RAX, '0';
JGE @outp;

LEA RAX, [RDI + 59];
DEC RDI;
SYSCALL;
